<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.why.Evaluation.mapperImpl.UserMapper" >
  <resultMap id="BaseResultMap" type="com.why.Evaluation.dto.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="certificate_type" property="certificateType" jdbcType="VARCHAR" />
    <result column="certificate_id" property="certificateId" jdbcType="VARCHAR" />
    <result column="user_birth" property="userBirth" jdbcType="VARCHAR" />
    <result column="tel_num" property="telNum" jdbcType="VARCHAR" />
    <result column="instruction" property="instruction" jdbcType="VARCHAR" />
    <result column="photo_url" property="photoUrl" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="user_pro" property="userPro" jdbcType="INTEGER" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_account, user_password, user_name, user_sex, certificate_type, certificate_id, 
    user_birth, tel_num, instruction, photo_url, location, education, school, user_pro, 
    user_email, user_status, regist_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.why.Evaluation.dto.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.why.Evaluation.dto.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.why.Evaluation.dto.User" >
    insert into user (user_id, user_account, user_password, 
      user_name, user_sex, certificate_type, 
      certificate_id, user_birth, tel_num, 
      instruction, photo_url, location, 
      education, school, user_pro, 
      user_email, user_status, regist_time
      )
    values (#{userId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, #{certificateType,jdbcType=VARCHAR}, 
      #{certificateId,jdbcType=VARCHAR}, #{userBirth,jdbcType=VARCHAR}, #{telNum,jdbcType=VARCHAR}, 
      #{instruction,jdbcType=VARCHAR}, #{photoUrl,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{userPro,jdbcType=INTEGER}, 
      #{userEmail,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, #{registTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.why.Evaluation.dto.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="certificateType != null" >
        certificate_type,
      </if>
      <if test="certificateId != null" >
        certificate_id,
      </if>
      <if test="userBirth != null" >
        user_birth,
      </if>
      <if test="telNum != null" >
        tel_num,
      </if>
      <if test="instruction != null" >
        instruction,
      </if>
      <if test="photoUrl != null" >
        photo_url,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="userPro != null" >
        user_pro,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null" >
        #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateId != null" >
        #{certificateId,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null" >
        #{userBirth,jdbcType=VARCHAR},
      </if>
      <if test="telNum != null" >
        #{telNum,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null" >
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="userPro != null" >
        #{userPro,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.why.Evaluation.dto.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userAccount != null" >
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null" >
        user_sex = #{record.userSex,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateType != null" >
        certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateId != null" >
        certificate_id = #{record.certificateId,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirth != null" >
        user_birth = #{record.userBirth,jdbcType=VARCHAR},
      </if>
      <if test="record.telNum != null" >
        tel_num = #{record.telNum,jdbcType=VARCHAR},
      </if>
      <if test="record.instruction != null" >
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.photoUrl != null" >
        photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.userPro != null" >
        user_pro = #{record.userPro,jdbcType=INTEGER},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null" >
        user_status = #{record.userStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=VARCHAR},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_id = #{record.certificateId,jdbcType=VARCHAR},
      user_birth = #{record.userBirth,jdbcType=VARCHAR},
      tel_num = #{record.telNum,jdbcType=VARCHAR},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      user_pro = #{record.userPro,jdbcType=INTEGER},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.why.Evaluation.dto.User" >
    update user
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null" >
        certificate_type = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateId != null" >
        certificate_id = #{certificateId,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null" >
        user_birth = #{userBirth,jdbcType=VARCHAR},
      </if>
      <if test="telNum != null" >
        tel_num = #{telNum,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null" >
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="userPro != null" >
        user_pro = #{userPro,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.why.Evaluation.dto.User" >
    update user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_id = #{certificateId,jdbcType=VARCHAR},
      user_birth = #{userBirth,jdbcType=VARCHAR},
      tel_num = #{telNum,jdbcType=VARCHAR},
      instruction = #{instruction,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      user_pro = #{userPro,jdbcType=INTEGER},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>